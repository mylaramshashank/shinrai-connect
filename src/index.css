@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/

@layer base {
  :root {
    /* Shinrai Connect - Anime Futuristic Theme */
    --background: 0 0% 0%;
    --foreground: 0 0% 100%;

    --card: 0 0% 5%;
    --card-foreground: 0 0% 100%;

    --popover: 0 0% 5%;
    --popover-foreground: 0 0% 100%;

    --primary: 180 100% 50%;
    --primary-foreground: 0 0% 0%;

    --secondary: 320 100% 70%;
    --secondary-foreground: 0 0% 0%;

    --muted: 0 0% 15%;
    --muted-foreground: 0 0% 70%;

    --accent: 180 100% 50%;
    --accent-foreground: 0 0% 0%;

    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 100%;

    --border: 180 100% 50%;
    --input: 0 0% 10%;
    --ring: 180 100% 50%;

    --radius: 0.5rem;

    /* Neon glow effects */
    --glow-cyan: 0 0 20px hsl(180 100% 50% / 0.5), 0 0 40px hsl(180 100% 50% / 0.3);
    --glow-pink: 0 0 20px hsl(320 100% 70% / 0.5), 0 0 40px hsl(320 100% 70% / 0.3);
    --glow-text-cyan: 0 0 10px hsl(180 100% 50% / 0.8), 0 0 20px hsl(180 100% 50% / 0.4);
    --glow-text-pink: 0 0 10px hsl(320 100% 70% / 0.8), 0 0 20px hsl(320 100% 70% / 0.4);

    /* Animation timings */
    --transition-smooth: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    --transition-bounce: all 0.5s cubic-bezier(0.68, -0.55, 0.265, 1.55);
  }

  .dark {
    --background: 0 0% 0%;
    --foreground: 0 0% 100%;
    --card: 0 0% 5%;
    --card-foreground: 0 0% 100%;
    --popover: 0 0% 5%;
    --popover-foreground: 0 0% 100%;
    --primary: 180 100% 50%;
    --primary-foreground: 0 0% 0%;
    --secondary: 320 100% 70%;
    --secondary-foreground: 0 0% 0%;
    --muted: 0 0% 15%;
    --muted-foreground: 0 0% 70%;
    --accent: 180 100% 50%;
    --accent-foreground: 0 0% 0%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 0 0% 100%;
    --border: 180 100% 50%;
    --input: 0 0% 10%;
    --ring: 180 100% 50%;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground font-body;
    font-family: 'Poppins', sans-serif;
  }

  h1, h2, h3, h4, h5, h6 {
    font-family: 'Orbitron', sans-serif;
  }
}

@layer utilities {
  .text-glow-cyan {
    text-shadow: var(--glow-text-cyan);
  }

  .text-glow-pink {
    text-shadow: var(--glow-text-pink);
  }

  .border-glow-cyan {
    box-shadow: var(--glow-cyan);
  }

  .border-glow-pink {
    box-shadow: var(--glow-pink);
  }

  .grid-pattern {
    background-image: 
      linear-gradient(hsl(180 100% 50% / 0.1) 1px, transparent 1px),
      linear-gradient(90deg, hsl(180 100% 50% / 0.1) 1px, transparent 1px);
    background-size: 50px 50px;
  }

  .animate-pulse-glow {
    animation: pulse-glow 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  }

  @keyframes pulse-glow {
    0%, 100% {
      box-shadow: 0 0 20px hsl(180 100% 50% / 0.5), 0 0 40px hsl(180 100% 50% / 0.3);
    }
    50% {
      box-shadow: 0 0 30px hsl(180 100% 50% / 0.8), 0 0 60px hsl(180 100% 50% / 0.5);
    }
  }

  @keyframes float {
    0%, 100% {
      transform: translateY(0px);
    }
    50% {
      transform: translateY(-20px);
    }
  }

  .animate-float {
    animation: float 3s ease-in-out infinite;
  }

  /* 3D Card Flip Animation */
  @keyframes card-flip {
    0% {
      transform: rotateY(0deg);
    }
    100% {
      transform: rotateY(180deg);
    }
  }

  .card-3d {
    perspective: 1000px;
    transform-style: preserve-3d;
  }

  .card-3d-inner {
    position: relative;
    width: 100%;
    height: 100%;
    transition: transform 0.6s;
    transform-style: preserve-3d;
  }

  .card-3d:hover .card-3d-inner {
    transform: rotateY(180deg);
  }

  .card-3d-front,
  .card-3d-back {
    position: absolute;
    width: 100%;
    height: 100%;
    backface-visibility: hidden;
    -webkit-backface-visibility: hidden;
  }

  .card-3d-back {
    transform: rotateY(180deg);
  }

  /* 3D Floating Shapes */
  @keyframes float-3d {
    0%, 100% {
      transform: translate3d(0, 0, 0) rotateZ(0deg);
    }
    25% {
      transform: translate3d(10px, -10px, 10px) rotateZ(5deg);
    }
    50% {
      transform: translate3d(-5px, -20px, -5px) rotateZ(-5deg);
    }
    75% {
      transform: translate3d(-10px, -10px, 10px) rotateZ(3deg);
    }
  }

  .floating-shape {
    animation: float-3d 8s ease-in-out infinite;
  }

  /* 3D Button Effects */
  .button-3d {
    transform-style: preserve-3d;
    transition: all 0.3s ease;
    position: relative;
  }

  .button-3d:hover {
    transform: translateY(-2px) rotateX(5deg);
    box-shadow: 
      0 10px 30px -10px hsl(180 100% 50% / 0.5),
      0 0 40px hsl(180 100% 50% / 0.3);
  }

  .button-3d:active {
    transform: translateY(0px) rotateX(0deg);
  }

  /* Particle animation */
  @keyframes particle-float {
    0% {
      transform: translate(0, 0) scale(1);
      opacity: 0;
    }
    10% {
      opacity: 1;
    }
    90% {
      opacity: 1;
    }
    100% {
      transform: translate(var(--tx), var(--ty)) scale(0);
      opacity: 0;
    }
  }

  .particle {
    animation: particle-float linear infinite;
  }

  /* 3D Tilt Effect */
  .tilt-3d {
    transform-style: preserve-3d;
    transition: transform 0.3s ease;
  }
}
